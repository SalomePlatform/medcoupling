# Copyright (C) 2007-2012  CEA/DEN, EDF R&D
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

INCLUDE_DIRECTORIES(
  ${PARMETIS_INCLUDE_DIRS}
  ${METIS_INCLUDE_DIRS}
  ${SCOTCH_INCLUDE_DIRS}
  ${BOOST_INCLUDE_DIRS} 
  ${CPPUNIT_INCLUDE_DIRS}
  ${LIBXML_INCLUDE_DIRS}
  ${MED3_INCLUDE_DIRS}
  ${HDF5_INCLUDE_DIRS}
  ${MPI_INCLUDE_DIRS} 
  ${CMAKE_CURRENT_SOURCE_DIR}/..
  ${CMAKE_CURRENT_SOURCE_DIR}/../../MEDMEM
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNELTest # for BasicMainTest.cxx
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNEL
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNEL/Bases
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNEL/Geometric2D
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNEL/ExprEval
  ${CMAKE_CURRENT_SOURCE_DIR}/../../INTERP_KERNEL/GaussPoints
)

SET(MEDSPLITTERTest_HEADERS_HXX
  MEDSPLITTERTest.hxx
  MEDSPLITTERTest_Utils.hxx
  MEDSPLITTERTest_defs.hxx
)

SET(MEDSPLITTERTest_SOURCES
  MEDSPLITTERTest.cxx
  MEDSPLITTERTest_MESHCollection.cxx
  MEDSPLITTERTest_ParallelTopology.cxx
  MEDSPLITTERTest_Utils.cxx
)

SET(MEDSPLITTERTest_DEFINITIONS "${HDF5_DEFINITIONS} ${MED3_DEFINITIONS} ${BOOST_DEFINITIONS} ${LIBXML_DEFINITIONS} ${CPPUNIT_DEFINITIONS} ${MPI_DEFINITIONS} ${PLATFORM_DEFINITIONS}")
SET(MEDSPLITTERTest_LDFLAGS ${CPPUNIT_LIBS} ${MED3_LIBS_C_ONLY} medsplittercpp)

IF(MED_ENABLE_PARMETIS)
  SET(MEDSPLITTERTest_SOURCES
    ${MEDSPLITTERTest_SOURCES}
    ParaMEDSPLITTERTest_MeshSendReceive.cxx
    ParaMEDSPLITTERTest_ParaDomainSelector.cxx
    ParaMEDSPLITTERTest_medsplitter_para.cxx
    ParaMEDSPLITTERTest.hxx
  )
  SET(MEDSPLITTERTest_DEFINITIONS "${MEDSPLITTERTest_DEFINITIONS} ${PARMETIS_DEFINITIONS}")
  SET(MEDSPLITTERTest_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} ${PARMETIS_LIBS})
ENDIF(MED_ENABLE_PARMETIS)

IF(MED_ENABLE_METIS)
  SET(MEDSPLITTERTest_DEFINITIONS "${MEDSPLITTERTest_DEFINITIONS} ${METIS_DEFINITIONS}")
  SET(MEDSPLITTERTest_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} ${METIS_LIBS})
ENDIF(MED_ENABLE_METIS)
			    
IF(MED_ENABLE_KERNEL)
  INCLUDE_DIRECTORIES(${KERNEL_ROOT_DIR}/include/salome)
  SET(MEDSPLITTERTest_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} ${SALOMELocalTrace})
ENDIF(MED_ENABLE_KERNEL)
      
IF(MED_ENABLE_SCOTCH)
  SET(MEDSPLITTERTest_DEFINITIONS "${MEDSPLITTERTest_DEFINITIONS} ${SCOTCH_DEFINITIONS}")
  SET(MEDSPLITTERTest_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} ${SCOTCH_LIBS})
ENDIF(MED_ENABLE_SCOTCH)

SET(SCRIPTS testMEDSPLITTER.py)



IF(MPI_IS_OK)
  IF(MED_ENABLE_PARMETIS)
    SET(TestParaMEDSPLITTER_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} MEDSPLITTERTest med_V2_1 medmem interpkernel medsplittercpp)
    SET(SCRIPTS ${SCRIPTS} testMEDSPLITTER.py)
    
    ADD_EXECUTABLE(TestParaMEDSPLITTER TestParaMEDSPLITTER.cxx)
    SET_TARGET_PROPERTIES(TestParaMEDSPLITTER PROPERTIES COMPILE_FLAGS "${MEDSPLITTERTest_DEFINITIONS}")
    TARGET_LINK_LIBRARIES(TestParaMEDSPLITTER ${TestParaMEDSPLITTER_LDFLAGS})
    INSTALL(TARGETS TestParaMEDSPLITTER DESTINATION ${MED_salomebin_BINS})
  ENDIF(MED_ENABLE_PARMETIS)
ELSE(MPI_IS_OK)  
  IF(MED_ENABLE_METIS)
    SET(TestMEDSPLITTER_LDFLAGS ${MEDSPLITTERTest_LDFLAGSS} MEDSPLITTERTest med_V2_1 medmem interpkernel medsplittercpp)
    IF(MED_ENABLE_KERNEL)
      SET(MEDSPLITTERTest_LDFLAGS ${MEDSPLITTERTest_LDFLAGS} ${SALOMEBasics})
    ENDIF(MED_ENABLE_KERNEL)
    
    ADD_EXECUTABLE(TestMEDSPLITTER TestMEDSPLITTER.cxx)
    SET_TARGET_PROPERTIES(TestMEDSPLITTER PROPERTIES COMPILE_FLAGS "${MEDSPLITTERTest_DEFINITIONS}")
    TARGET_LINK_LIBRARIES(TestMEDSPLITTER ${TestMEDSPLITTER_LDFLAGS})
    INSTALL(TARGETS TestMEDSPLITTER DESTINATION ${MED_salomebin_BINS})
  ENDIF(MED_ENABLE_METIS)
ENDIF(MPI_IS_OK)
  
ADD_LIBRARY(MEDSPLITTERTest SHARED ${MEDSPLITTERTest_SOURCES})
SET_TARGET_PROPERTIES(MEDSPLITTERTest PROPERTIES COMPILE_FLAGS "${MEDSPLITTERTest_DEFINITIONS}")
TARGET_LINK_LIBRARIES(MEDSPLITTERTest ${MEDSPLITTERTest_LDFLAGS})
INSTALL(TARGETS MEDSPLITTERTest DESTINATION ${MED_salomelib_LIBS})

INSTALL(FILES ${MEDSPLITTERTest_HEADERS_HXX} DESTINATION ${MED_salomeinclude_HEADERS})
INSTALL(FILES ${SCRIPTS} DESTINATION ${MED_salomebin_BINS})
