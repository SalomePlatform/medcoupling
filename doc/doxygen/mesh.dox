/*!
\page mesh MESH

\section mesh_general General information

The MESH class is dedicated to the handling of unstructured
meshes. Class MESHING  deriving from it supplies functions for creating meshes from scratch (c.f. \ref meshing).

\section mesh_connectivity Content of the connectivity array
Underlying the unstructured meshes is the notion of connectivity. This section only covers meshes made out of standard elements, the \c MED_POLYGON and \c MED_POLYHEDRA case being detailed in section \ref polygon .

\anchor medmemConnArrays
\image html connectivity_arrays_small.png "Nodal connectivity storage scheme"
\image latex connectivity_arrays_small.eps "Nodal connectivity storage scheme"

In MEDMEM, an unstructured mesh nodal connectivity is defined with these arrays:
- the type array, which contains the number of cells for each present type;
- the nodal connectivity array containing the connectivity of each cell, all cells being sorted by type;
- the connectivity index array, which indicates the beginning of each cell in the connectivity array.

The cell types are ordered by their number of nodes; MED_POLYGON and
MED_POLYHEDRA is always the last type, if present.

As an example, let us consider a mesh made out of a linear triangle, two linear quadrangles and a quadratic triangle (c.f. figure \ref fig_connectivity_example ).
\image html connectivity_example_small.png "Example for mesh connectivity"
\image latex connectivity_example_small.eps "Example for mesh connectivity"
The number of types is :  3

The type array writes :
\{ \a MED_TRIA3, \a MED_QUAD4, \a MED_TRIA6 \} 

The global numbering index is :  \{ 1,2,4,5 \} }. Its dimension is \f$ n_{types}+1 \f$
so that elements of type \f$ type[i] \f$ are stored between element \f$ index[i] \f$ and 
\f$ index[i+1] \f$ ( \f$ index[i] \leq j < index[i+1] \f$).

The connectivity array writes :
\{ 1, 2, 3, 2, 4, 5, 3, 5, 6, 7, 8, 4, 6, 5, 10, 11,  9\} 

The connectivity index array writes :
\{ 1, 4, 8, 12, 18\} 

Its dimension is \f$n_{cell}+1\f$, in order to be able to write 
that nodes of element \f$i\f$ are located in the connectivity array between
\f$index[i]\f$ and \f$index[i+1]\f$ ( \f$index[i] \leq j < index[i+1]\f$).\\


\warning
As MEDMEM respects MED numbering which starts Fortran-style at 1, reading these information to set C structures requires careful handling of index offsets.


\section mesh_outline Outline

The description of MESH methods is given by the following sections :

- Description of constructors is given in \ref MESH_constructors.
- Methods retrieveing general information is given in \ref MESH_general.
- Retrieval of information about mesh nodes can be found in \ref MESH_nodes.
- Connectivity information methods are described in \ref MESH_connectivity.
- The methods retrieving family information are given in \ref MESH_families.
- The IO methods are given in \ref MESH_io. 
- The methods for an advanced usage (applying algorithms to meshes)
are given in \ref MESH_advanced.

*/
