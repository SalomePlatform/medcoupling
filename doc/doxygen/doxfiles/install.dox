
/*!
\page paramedmem_install Configuring and Installing MED from sources

The libraries in SALOME MED can be configured in several manners so that it can run inside or outside the Salome platform.
Also, partitioning and parallel functionalities are optional.

The sources of the library are located in the \a MED_SRC directory.
The first step consists in preparing the CMake build precedure :
\verbatim
mkdir MED_BUILD
cd ${MED_BUILD}
cmake -DCMAKE_BUILD_TYPE=<Mode> -DCMAKE_INSTALL_PREFIX=`pwd`/../MED_INSTALL ../<MED_SRC>
\endverbatim

, where <Mode> is build mode (Release or Debug).

This will create SALOME MED libraries with link to the SALOME Kernel.
Sometimes, if it is desirable to have a standalone version of the library to be used independently from SALOME, use :
\verbatim
mkdir MED_BUILD
cd ${MED_BUILD}
cmake -DCMAKE_BUILD_TYPE=<Mode> -DCMAKE_INSTALL_PREFIX=`pwd`/../MED_INSTALL _DSALOME_MED_STANDALONE=ON ../<MED_SRC>
\endverbatim

This will configure the library without splitting functionalities. ParaMEDMEM will be compiled if an MPI version has been found.

The following options can be useful to configure SALOME MED :
- \a -DSALOME_MED_PARTITIONER_METIS=ON enables metis graph library in MEDPartitioner,
- \a -DSALOME_MED_PARTITIONER_PARMETIS=ON enables parmetis graph library in MEDPartitioner,
- \a -DSALOME_MED_PARTITIONER_SCOTCH=ON enables scotch graph library in MEDPartitioner,
- \a -DSALOME_MED_MICROMED=ON build MED with MED file dependancy,
- \a -DSALOME_MED_ENABLE_PYTHON=ON builds PYTHON bindings,
- \a -DSALOME_MED_ENABLE_PARTITIONER builds MEDPartitioner,
- \a -DSALOME_MED_ENABLE_RENUMBER builds Renumber,
- \a -DSALOME_USE_MPI=ON uses MPI containers.
*/
