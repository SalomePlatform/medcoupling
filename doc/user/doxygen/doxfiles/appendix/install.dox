/*!
\page install Configuring and Installing MED from sources

The install procedure of %MEDCoupling can handle a variety of configurations
to suit the needs of its user. Instructions for configuring and
installing the module can be found here.
Partitioning and parallel functionalities are optional.

Assume that the library sources are located in \a MEDCOUPLING_SRC directory. Build and install directories are MEDCOUPLING_BUILD and MEDCOUPLING_INSTALL, respectively.
The first step consists in preparing the CMake build precedure :
\verbatim
mkdir <MEDCOUPLING_BUILD>
cd <MEDCOUPLING_BUILD>
cmake -DCMAKE_BUILD_TYPE=<Mode> -DCMAKE_INSTALL_PREFIX=<MEDCOUPLING_INSTALL> <MEDCOUPLING_SRC>
\endverbatim

, where <Mode> is build mode (Release or Debug).

This will configure the library without splitting functionalities. The \ref parallel "parallel functionalities" will be compiled if an MPI version has been found.

The following options can be useful to configure MEDCoupling :
- \a -DMEDCOUPLING_PARTITIONER_METIS=ON enables metis graph library in MEDPartitioner,
- \a -DMEDCOUPLING_PARTITIONER_PARMETIS=ON enables parmetis graph library in MEDPartitioner,
- \a -DMEDCOUPLING_PARTITIONER_SCOTCH=ON enables scotch graph library in MEDPartitioner,
- \a -DMEDCOUPLING_MICROMED=ON build MED with MED file dependancy,
- \a -DMEDCOUPLING_ENABLE_PYTHON=ON builds PYTHON bindings,
- \a -DMEDCOUPLING_ENABLE_PARTITIONER builds MEDPartitioner,
- \a -DMEDCOUPLING_ENABLE_RENUMBER builds Renumber,
- \a -DMEDCOUPLING_USE_MPI=ON uses MPI containers.

According to set options and compilation environment, user may need to define some <prerequisite>_ROOT_DIR variables. For example if in SALOME environment:
\verbatim
export MEDFILE_ROOT_DIR=${MED3HOME}
export METIS_ROOT_DIR=$METISDIR
export SCOTCH_ROOT_DIR=$SCOTCHDIR
export BOOST_ROOT_DIR=$BOOST_ROOT
export GRAPHVIZ_ROOT_DIR=$GRAPHVIZHOME
export CPPUNIT_ROOT_DIR=$CPPUNIT_ROOT
\endverbatim

If using MPI, the PARMETIS_ROOT_DIR variable should be set.
*/
